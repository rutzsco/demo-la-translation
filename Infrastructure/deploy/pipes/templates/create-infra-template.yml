# ----------------------------------------------------------------------------------------------------
# Template to deploy Azure Resources for one environment
# ----------------------------------------------------------------------------------------------------
parameters: 
- name: variableGroupName
  default: ''
- name: environmentName
  default: 'DEV'
- name: templateFolderName
  default: 'Infrastructure/bicep'
- name: templateFileName
  default: 'main.bicep'
  
# ----------------------------------------------------------------------------------------------------
jobs:
- deployment: Create${{ parameters.environmentName }}Infra
  displayName: Initialize ${{ parameters.environmentName }} Create Infra
  environment: ${{ parameters.environmentName }}

- job: Create${{ parameters.environmentName }}InfraJob
  displayName: Create ${{ parameters.environmentName }} Infrastructure
  variables:
    - group: ${{ parameters.variableGroupName }}
    - name: environmentNameUpper
      value: ${{ upper(parameters.environmentName) }}
    - name: environmentNameLower
      value: ${{ lower(parameters.environmentName) }}
    - name: templateFile
      value: '$(Pipeline.Workspace)/s/${{ parameters.templateFolderName }}/${{ parameters.templateFileName }}'

  steps:
  - bash: |
      appPrefixLower=$(echo "$(appPrefix)" | tr '[:upper:]' '[:lower:]')
      echo "##vso[task.setvariable variable=appPrefixLower]$appPrefixLower"

      runDateTime=$(echo $(date '+%Y%m%d-%H%M%S'))
      echo "##vso[task.setvariable variable=runDateTime]$runDateTime"
      echo "runDateTime=$runDateTime"
    displayName: 'Create Variables'

  - bash: |
      echo "environmentNameUpper=$(environmentNameUpper)"
      echo "environmentNameLower=$(environmentNameLower)"
      echo "resourceGroupName=$(resourceGroupName)"
      echo "azureSubscription=$(azureSubscription)"
      echo "azureSubscriptionId=$(azureSubscriptionId)"
      echo "region=$(region)"
      echo "orgPrefix=$(orgPrefix)"
      echo "appPrefix=$(appPrefix)"
      echo "appPrefixLower=$(appPrefixLower)"
      echo "templateFile=$(templateFile)"
      tree $(Pipeline.Workspace)
    displayName: 'Display Variables'
    continueOnError: true

  - task: AzureCLI@2
    displayName: 'Create Resource Group if not exists'
    inputs:
      azureSubscription: $(azureSubscription)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: if !(az group exists --name $resourceGroupName) ; then az group create --name $(resourceGroupName) --location $(region) --tags LastDeployed=$(runDateTime) Organization=$(orgPrefix) Application=$(appPrefix) Environment=$(environmentNameUpper) ; fi

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Publish Bicep Resources'
    inputs:
      csmFile: $(templateFile)
      overrideParameters: >
        -appPrefix $(appPrefix) 
        -environment $(environmentNameLower)
        -longAppName $(longAppName)
        -shortAppName $(shortAppName)
        -location $(region)
        -translationServiceKey $(translationServiceKey)
        -speachServiceKey $(speachServiceKey)
        -dockerRegistryServerUrl $(dockerRegistryServerUrl)
        -dockerRegistryServerUserName $(dockerRegistryServerUserName)
        -dockerRegistryServerPassword $(dockerRegistryServerPassword)
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: $(azureSubscription)
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(resourceGroupName)'
      location: '$(region)'
      templateLocation: 'Linked artifact'
      deploymentMode: 'Incremental'







